@layout FullPage
@page "/"
@inject IJSRuntime JS;


<div class="box">
    <div class="customrow header">
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
            <a class="navbar-brand" href="#">C'era una volta</a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarText" aria-controls="navbarText" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarText">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <form class="form-inline">
                            <button class="btn btn-sm btn-outline-secondary" type="button">Info</button>
                        </form>
                    </li>
                    @*<li class="nav-item">
                            <a class="nav-link" href="#">Features</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Pricing</a>
                        </li>*@
                </ul>
                <span class="col-6">
                    <TimeLine Dates=@Dates class="mb-2" @bind-SelectedDateIndex="@SelectedIndex"></TimeLine>
                </span>

                @*<button @onclick="(() => CallTestModal())">Call modal</button>*@
            </div>
        </nav>


    </div>
    <div class="customrow content">
        <div class="map-container">
            <div id="map"></div>
        </div>
    </div>
</div>

<ImageModal @ref="Modal"></ImageModal>

@code {
    /*
    * Proprietà
    */
    private List<string> Dates = new List<string>() { "Test","1944", "1957", "1980", "2000" };

    private int SelectedIndex { get; set; } = 0;

    private ImageModal Modal { get; set; }

    private static Action action;

    IJSObjectReference module;

    /*
    * Metodi
    */
    protected override async void OnInitialized()
    {
        module = await JS
            .InvokeAsync<IJSObjectReference>("import", "./js/test.js");

        await module.InvokeVoidAsync("InitializeTestMap");

        //Assegna static action alla chiamata per aprire il modal
        action = CallTestModal;
    }

    [JSInvokable]
    public static void UpdateMessageCaller()
    {
        action.Invoke();
    }


    protected void CallTestModal()
    {
        Modal.Open();
    }
}

<style>
    .map-container{
        height: 90vh;
    }

    #map {
        position: absolute;
        top: 0;
        bottom: 0;
        width: 100%;
        height: 90%;
        background: #eae1d3;
    }
  .box {
      display: flex;
      flex-flow: column;
      height: 100%;
  }

  .box .customrow {
  }

    .box .customrow.header {
        flex: 0 1 auto;
        /* The above is shorthand for:
        flex-grow: 0,
        flex-shrink: 1,
        flex-basis: auto
        */
        height: 56px;
    }

    .box .customrow.content {
        position: relative;
        flex: 1 1 auto;
    }

  .box .customrow.footer {
      flex: 0 1 40px;
  }
</style>